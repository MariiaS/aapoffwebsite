# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Dart
        uses: actions/setup-dart@v2
        with:
          dart-version: '2.16.2'  # Specify the Dart version you need

      # Install dart-sdk-manager
      - name: Install dart-sdk-manager
        run: |
          dart pub global activate dart_sdk_manager
          export PATH="$PATH":"$HOME/.pub-cache/bin"
        shell: bash

      # List available Dart SDK versions (optional, for reference)
      - name: List available Dart SDK versions
        run: |
          dart-sdk-manager list
        shell: bash

      # Use a specific Dart SDK version (replace <version> with the desired version)
      - name: Use Dart SDK 3.0.0
        run: |
          dart-sdk-manager use 3.0.0
        shell: bash

      # Verify the updated Dart SDK version
      - name: Verify Dart SDK version
        run: |
          dart --version
        shell: bash

      - name: Setup Flutter
        uses: subosito/flutter-action@v1  # Use the Flutter action and specify v1
        with:
          flutter-version: '2.x'  # Specify the Flutter version you're using

      - name: Build Flutter Web
        run: |
          flutter pub get  # Install dependencies
          flutter build web --web-renderer html  # Build Flutter web app
        shell: bash

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3  # Use this action to deploy to GitHub Pages
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: build/web  # Specify the directory containing the built web app

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
